---
- import_playbook: obtain_session_token.yaml

- hosts: aws_iam_user
  gather_facts: False
  vars_files:
    - infrastructure.yaml
  tasks:
    - name: "IAM User"
      iam:
        iam_type: user
        name: "{{ name }}"
        access_key_state: create
        state: present
        region: "{{ aws_default_region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        security_token: "{{ security_token }}"
      no_log: True
      register: user_info
    - name: "Check if AWS Creds Changed"
      set_fact:
        aws_creds_changed: "{{ user_info.changed and user_info.user_meta is defined }}"
    - name: "inventory/host_vars/aws_user/aws_user_creds.yaml"
      template:
        src: templates/inventory/host_vars/aws_user_creds.yaml.j2
        dest: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/aws_user_creds.yaml"
      no_log: True
      when: aws_creds_changed
    - name: "Load User Creds"
      include_vars:
        file: "{{ inventory_dir }}/host_vars/{{ inventory_hostname }}/aws_user_creds.yaml"

- hosts: aws_sqs_queue
  gather_facts: False
  vars_files:
    - infrastructure.yaml
  tasks:
    - name: "SQS Queue"
      sqs_queue:
        name: "{{ name }}"
        state: present
        policy: "{{ lookup('template', 'templates/access_policy/sqs_queue.json.j2') }}"
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        security_token: "{{ security_token }}"
      register: queue_info
      until: not queue_info.failed|default(False)
      retries: 5
      delay: 10

- hosts: aws_sns_topic
  gather_facts: False
  vars_files:
    - infrastructure.yaml
  tasks:
    - name: "SNS Topic"
      sns_topic:
        name: "{{ name }}"
        state: present
        policy: "{{ lookup('template', 'templates/access_policy/sns_topic.json.j2') }}"
        purge_subscriptions: False
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        security_token: "{{ security_token }}"
      register: topic_info

- hosts: aws_s3_bucket
  gather_facts: False
  vars_files:
    - infrastructure.yaml
  tasks:
    - name: "S3 Bucket"
      s3_bucket:
        name: "{{ name }}"
        state: present
        policy: "{{ lookup('template', 'templates/access_policy/s3_bucket.json.j2') }}"
        region: "{{ region }}"
        aws_access_key: "{{ aws_access_key }}"
        aws_secret_key: "{{ aws_secret_key }}"
        security_token: "{{ security_token }}"
      register: bucket_info
